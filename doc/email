--spark mlib版：http://blog.csdn.net/baiyangfu_love/article/details/41014267
1、确定特征属性：
         先将所有的邮件中的单词提取出来，存到set里，以每个单词出现频率作为特征属性。假设该单词集的单词数为 m
2、清洗训练样本
         对于垃圾邮件和正常邮件两个类别的邮件分别计算出来每个邮件的特征属性，即：特征属性的单词出现在该邮件中，则特性向量置为1，否则置0。假设共有 n 个邮件。
         生成一个 n *ｍ　的矩阵　Ａ，　Ａ［ｉ］为第ｉ封邮件的特性向量
        每个邮件的所属类别则有一个 list B 存储，B[ i ] 为第 i 封邮件所属的类别，0：为正常邮件，1： 为垃圾邮件　
3、对每个训练样本计算对应不同类别的条件概率
        这个过程称为训练过程，使用训练样本训练出先验概率。
        p0num = zeros(numWords)         正常邮件结果 向量            
        p1Num = zeros(numWords)        垃圾邮件结果 向量
        p0Denom = 0.0                               正常邮件中的词的个数
        p1Denom = 0.0                              垃圾邮件中的词数
        for 训练样本 i ：训练样本集
             如果 i 属于 正常邮件：
                     p0num += 样本 i 的特征向量
                     p0Denom +=  样本 i 的词的个数
            else：
                    p1num += 样本 i 的特征向量 
                    p1Denom +=  样本 i 的词的个数

         p1 =   垃圾邮件个数/总的文档个数     垃圾邮件类别的概率 ， 那么 正常邮件类别概率 p0 = 1 - p1
         p1Vect = p1Num/p1Denom               垃圾邮件每个词的先验概率向量
         p0Vect = p0num/p0Denom               正常邮件每个词的先验概率向量

有了上面的每个类别的概率，和每个词属于不同类别的先验概率，就可以进行分类了

4、计算分类样本 A 属于每个类别的后验概率
     之前我们分析，我们将概率乘法转换成 去 ln 之后的加法也是等效的。
     所以我们可以通过下面的方法进行计算不同类别预测的概率：
     p1 ：A 属于垃圾邮件的预测概率
     p0 ：A 属于正常邮件的预测概率
     p1 = sum(vecA* p1Vec) + log(pClass1)
     p0 = sum(vecA * p0Vec) + log(1.0 - pClass1)

5、确定分类：
     最后一步就非常简单了，比较 p0 p1 的大小即可，哪个概率大，邮件A 属于哪个类别。